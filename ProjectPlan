--- Team ---

1. Illia Karmazin API Architecture (ASP.NET Core, C# , RESTful API) + Frontend 
2. Sebastian Marcinowski   DataBase (SQLite, Entity Framework Core) + Fronted 
3. Łukasz Watral   Security (ASP.NET Core Identity, LDAP + LDAPS , SSL/TLS) + Frontend 
4. Igor Bębenek DevOps (GitHub Actions, Docker , Postman) + Help( API Architecture + DataBase + Security) + Fronted

--- Frontend ---

React JS 18 or newer
TypeScript 5.0
Vite 4.0
Material UI 5.11 or newer
qrcode.react 3.1 or newer
Node.js (?)
Figma
XML file -> plan

--- Backend ---

C# 11
ASP.NET CORE 8.0
Entity Framework Core 8.0
store plan for next few days in cache 
ASP.NET Core Identity
SQLite 3.41 or newer
MediatR 12.4.1
AutoMapper 13.0.1

--- Website Management ---

PostMan -> check requests
GitHub
Docker
server -> windows server 2022

--- Security ---

SSL/TLS 1.3 -> HTTPS
LDAP 3.0 + LDAPS -> user verification
Data Protection API (DPAPI) -> to encrypt sensitive data (such as cookies and tokens) 
SQLCipher 4.5 or newer -> to protect the database 


--- Functionalities ---

user managment -> login, password, check with zut database via LDAP
showing recent day schedule for classroom
qr code generation and scanning
teacher can send message to classroom monitor
odpalanie Google Chrome w trybie kiosk -> wyświetlanie na tabletach przy sali (fullscreen)
#wazne -> nie popierdolic nazw sal 
#inportante -> dont fuck anything up (optional)
https://plan.zut.edu.pl/schedule_student.php?kind=apiwi&department=wi&start=2024-10-23&end=2024-10-24 
https://www.wi.zut.edu.pl/app/plan/?zut=WI-WI1
Use for classes and methods PascalCase
Use for variable camelCase
uid=wl53674,cn=users,cn=accounts,dc=zut,dc=edu,dc=pl -> do LDAPa, po zalogowaniu zrobić unbinda, timemout, ldap.zut.edu.pl, pobranie danych (np. imię, nazwisko) i wyświetlenie planu dla tych danych
SEBA => db -> user -> lesson -> message
